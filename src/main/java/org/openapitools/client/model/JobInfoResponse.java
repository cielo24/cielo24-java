/*
 * Cielo24
 * The cielo24 Web Services Platform API allows developers to easily integrate transcription, captioning and keyword extraction into their applications without having to use a manual web portal.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: devs@cielo24.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import org.openapitools.client.model.JobOptions;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * JobInfoResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-09T10:34:09.175-03:00[America/Sao_Paulo]")
public class JobInfoResponse {
  public static final String SERIALIZED_NAME_JOB_ID = "JobId";
  @SerializedName(SERIALIZED_NAME_JOB_ID)
  private String jobId;

  public static final String SERIALIZED_NAME_JOB_NAME = "JobName";
  @SerializedName(SERIALIZED_NAME_JOB_NAME)
  private String jobName;

  public static final String SERIALIZED_NAME_MEDIA_LENGTH_SECONDS = "MediaLengthSeconds";
  @SerializedName(SERIALIZED_NAME_MEDIA_LENGTH_SECONDS)
  private BigDecimal mediaLengthSeconds;

  public static final String SERIALIZED_NAME_EXTERNAL_ID = "ExternalId";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_ID)
  private String externalId;

  /**
   * Gets or Sets priority
   */
  @JsonAdapter(PriorityEnum.Adapter.class)
  public enum PriorityEnum {
    STANDARD("STANDARD"),
    
    PRIORITY("PRIORITY");

    private String value;

    PriorityEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PriorityEnum fromValue(String value) {
      for (PriorityEnum b : PriorityEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<PriorityEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PriorityEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PriorityEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return PriorityEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_PRIORITY = "Priority";
  @SerializedName(SERIALIZED_NAME_PRIORITY)
  private PriorityEnum priority;

  /**
   * Gets or Sets fidelity
   */
  @JsonAdapter(FidelityEnum.Adapter.class)
  public enum FidelityEnum {
    MECHANICAL("MECHANICAL"),
    
    PREMIUM("PREMIUM"),
    
    PROFESSIONAL("PROFESSIONAL");

    private String value;

    FidelityEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static FidelityEnum fromValue(String value) {
      for (FidelityEnum b : FidelityEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<FidelityEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FidelityEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FidelityEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return FidelityEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_FIDELITY = "Fidelity";
  @SerializedName(SERIALIZED_NAME_FIDELITY)
  private FidelityEnum fidelity;

  /**
   * Gets or Sets jobStatus
   */
  @JsonAdapter(JobStatusEnum.Adapter.class)
  public enum JobStatusEnum {
    AUTHORIZING("Authorizing"),
    
    PENDING("Pending"),
    
    IN_PROCESS("In Process"),
    
    COMPLETE("Complete"),
    
    MEDIA_FAILURE("Media Failure"),
    
    REVIEWING("Reviewing");

    private String value;

    JobStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static JobStatusEnum fromValue(String value) {
      for (JobStatusEnum b : JobStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<JobStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final JobStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public JobStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return JobStatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_JOB_STATUS = "JobStatus";
  @SerializedName(SERIALIZED_NAME_JOB_STATUS)
  private JobStatusEnum jobStatus;

  public static final String SERIALIZED_NAME_OPTIONS = "Options";
  @SerializedName(SERIALIZED_NAME_OPTIONS)
  private JobOptions options;

  public static final String SERIALIZED_NAME_RETURN_TARGETS = "ReturnTargets";
  @SerializedName(SERIALIZED_NAME_RETURN_TARGETS)
  private Object returnTargets;

  public static final String SERIALIZED_NAME_SOURCE_LANGUAGE = "SourceLanguage";
  @SerializedName(SERIALIZED_NAME_SOURCE_LANGUAGE)
  private String sourceLanguage;

  public static final String SERIALIZED_NAME_TARGET_LANGUAGE = "TargetLanguage";
  @SerializedName(SERIALIZED_NAME_TARGET_LANGUAGE)
  private String targetLanguage;

  public static final String SERIALIZED_NAME_CREATION_DATE = "CreationDate";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE)
  private String creationDate;

  public static final String SERIALIZED_NAME_START_DATE = "StartDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private String startDate;

  public static final String SERIALIZED_NAME_DUE_DATE = "DueDate";
  @SerializedName(SERIALIZED_NAME_DUE_DATE)
  private String dueDate;

  public static final String SERIALIZED_NAME_COMPLETED_DATE = "CompletedDate";
  @SerializedName(SERIALIZED_NAME_COMPLETED_DATE)
  private String completedDate;

  public static final String SERIALIZED_NAME_RETURN_DATE = "ReturnDate";
  @SerializedName(SERIALIZED_NAME_RETURN_DATE)
  private String returnDate;

  public static final String SERIALIZED_NAME_AUTHORIZATION_DATE = "AuthorizationDate";
  @SerializedName(SERIALIZED_NAME_AUTHORIZATION_DATE)
  private String authorizationDate;

  /**
   * Gets or Sets jobDifficulty
   */
  @JsonAdapter(JobDifficultyEnum.Adapter.class)
  public enum JobDifficultyEnum {
    GOOD("Good"),
    
    BAD("Bad"),
    
    UNKNOWN("Unknown");

    private String value;

    JobDifficultyEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static JobDifficultyEnum fromValue(String value) {
      for (JobDifficultyEnum b : JobDifficultyEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<JobDifficultyEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final JobDifficultyEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public JobDifficultyEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return JobDifficultyEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_JOB_DIFFICULTY = "JobDifficulty";
  @SerializedName(SERIALIZED_NAME_JOB_DIFFICULTY)
  private JobDifficultyEnum jobDifficulty;

  public JobInfoResponse() { 
  }

  public JobInfoResponse jobId(String jobId) {
    
    this.jobId = jobId;
    return this;
  }

   /**
   * Get jobId
   * @return jobId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0fbd6015910e42dca25a863c4925d77c", value = "")

  public String getJobId() {
    return jobId;
  }


  public void setJobId(String jobId) {
    this.jobId = jobId;
  }


  public JobInfoResponse jobName(String jobName) {
    
    this.jobName = jobName;
    return this;
  }

   /**
   * Get jobName
   * @return jobName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "sample_job_name", value = "")

  public String getJobName() {
    return jobName;
  }


  public void setJobName(String jobName) {
    this.jobName = jobName;
  }


  public JobInfoResponse mediaLengthSeconds(BigDecimal mediaLengthSeconds) {
    
    this.mediaLengthSeconds = mediaLengthSeconds;
    return this;
  }

   /**
   * Get mediaLengthSeconds
   * @return mediaLengthSeconds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "65.3", value = "")

  public BigDecimal getMediaLengthSeconds() {
    return mediaLengthSeconds;
  }


  public void setMediaLengthSeconds(BigDecimal mediaLengthSeconds) {
    this.mediaLengthSeconds = mediaLengthSeconds;
  }


  public JobInfoResponse externalId(String externalId) {
    
    this.externalId = externalId;
    return this;
  }

   /**
   * Depends on third-party integrations.
   * @return externalId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "12345", value = "Depends on third-party integrations.")

  public String getExternalId() {
    return externalId;
  }


  public void setExternalId(String externalId) {
    this.externalId = externalId;
  }


  public JobInfoResponse priority(PriorityEnum priority) {
    
    this.priority = priority;
    return this;
  }

   /**
   * Get priority
   * @return priority
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "PRIORITY", value = "")

  public PriorityEnum getPriority() {
    return priority;
  }


  public void setPriority(PriorityEnum priority) {
    this.priority = priority;
  }


  public JobInfoResponse fidelity(FidelityEnum fidelity) {
    
    this.fidelity = fidelity;
    return this;
  }

   /**
   * Get fidelity
   * @return fidelity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "PREMIUM", value = "")

  public FidelityEnum getFidelity() {
    return fidelity;
  }


  public void setFidelity(FidelityEnum fidelity) {
    this.fidelity = fidelity;
  }


  public JobInfoResponse jobStatus(JobStatusEnum jobStatus) {
    
    this.jobStatus = jobStatus;
    return this;
  }

   /**
   * Get jobStatus
   * @return jobStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "In Process", value = "")

  public JobStatusEnum getJobStatus() {
    return jobStatus;
  }


  public void setJobStatus(JobStatusEnum jobStatus) {
    this.jobStatus = jobStatus;
  }


  public JobInfoResponse options(JobOptions options) {
    
    this.options = options;
    return this;
  }

   /**
   * Get options
   * @return options
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JobOptions getOptions() {
    return options;
  }


  public void setOptions(JobOptions options) {
    this.options = options;
  }


  public JobInfoResponse returnTargets(Object returnTargets) {
    
    this.returnTargets = returnTargets;
    return this;
  }

   /**
   * Get returnTargets
   * @return returnTargets
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getReturnTargets() {
    return returnTargets;
  }


  public void setReturnTargets(Object returnTargets) {
    this.returnTargets = returnTargets;
  }


  public JobInfoResponse sourceLanguage(String sourceLanguage) {
    
    this.sourceLanguage = sourceLanguage;
    return this;
  }

   /**
   * RFC 5646 Language Code
   * @return sourceLanguage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "en", value = "RFC 5646 Language Code")

  public String getSourceLanguage() {
    return sourceLanguage;
  }


  public void setSourceLanguage(String sourceLanguage) {
    this.sourceLanguage = sourceLanguage;
  }


  public JobInfoResponse targetLanguage(String targetLanguage) {
    
    this.targetLanguage = targetLanguage;
    return this;
  }

   /**
   * RFC 5646 Language Code
   * @return targetLanguage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "fr", value = "RFC 5646 Language Code")

  public String getTargetLanguage() {
    return targetLanguage;
  }


  public void setTargetLanguage(String targetLanguage) {
    this.targetLanguage = targetLanguage;
  }


  public JobInfoResponse creationDate(String creationDate) {
    
    this.creationDate = creationDate;
    return this;
  }

   /**
   * ISO 8601 Date String
   * @return creationDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2014-07-31T12:35:52.324389", value = "ISO 8601 Date String")

  public String getCreationDate() {
    return creationDate;
  }


  public void setCreationDate(String creationDate) {
    this.creationDate = creationDate;
  }


  public JobInfoResponse startDate(String startDate) {
    
    this.startDate = startDate;
    return this;
  }

   /**
   * ISO 8601 Date String
   * @return startDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2014-07-31T12:35:52.324389", value = "ISO 8601 Date String")

  public String getStartDate() {
    return startDate;
  }


  public void setStartDate(String startDate) {
    this.startDate = startDate;
  }


  public JobInfoResponse dueDate(String dueDate) {
    
    this.dueDate = dueDate;
    return this;
  }

   /**
   * ISO 8601 Date String
   * @return dueDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2014-07-31T12:35:52.324389", value = "ISO 8601 Date String")

  public String getDueDate() {
    return dueDate;
  }


  public void setDueDate(String dueDate) {
    this.dueDate = dueDate;
  }


  public JobInfoResponse completedDate(String completedDate) {
    
    this.completedDate = completedDate;
    return this;
  }

   /**
   * ISO 8601 Date String
   * @return completedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2014-07-31T12:35:52.324389", value = "ISO 8601 Date String")

  public String getCompletedDate() {
    return completedDate;
  }


  public void setCompletedDate(String completedDate) {
    this.completedDate = completedDate;
  }


  public JobInfoResponse returnDate(String returnDate) {
    
    this.returnDate = returnDate;
    return this;
  }

   /**
   * ISO 8601 Date String
   * @return returnDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2014-07-31T12:35:52.324389", value = "ISO 8601 Date String")

  public String getReturnDate() {
    return returnDate;
  }


  public void setReturnDate(String returnDate) {
    this.returnDate = returnDate;
  }


  public JobInfoResponse authorizationDate(String authorizationDate) {
    
    this.authorizationDate = authorizationDate;
    return this;
  }

   /**
   * ISO 8601 Date String
   * @return authorizationDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2014-07-31T12:35:52.324389", value = "ISO 8601 Date String")

  public String getAuthorizationDate() {
    return authorizationDate;
  }


  public void setAuthorizationDate(String authorizationDate) {
    this.authorizationDate = authorizationDate;
  }


  public JobInfoResponse jobDifficulty(JobDifficultyEnum jobDifficulty) {
    
    this.jobDifficulty = jobDifficulty;
    return this;
  }

   /**
   * Get jobDifficulty
   * @return jobDifficulty
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Good", value = "")

  public JobDifficultyEnum getJobDifficulty() {
    return jobDifficulty;
  }


  public void setJobDifficulty(JobDifficultyEnum jobDifficulty) {
    this.jobDifficulty = jobDifficulty;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JobInfoResponse jobInfoResponse = (JobInfoResponse) o;
    return Objects.equals(this.jobId, jobInfoResponse.jobId) &&
        Objects.equals(this.jobName, jobInfoResponse.jobName) &&
        Objects.equals(this.mediaLengthSeconds, jobInfoResponse.mediaLengthSeconds) &&
        Objects.equals(this.externalId, jobInfoResponse.externalId) &&
        Objects.equals(this.priority, jobInfoResponse.priority) &&
        Objects.equals(this.fidelity, jobInfoResponse.fidelity) &&
        Objects.equals(this.jobStatus, jobInfoResponse.jobStatus) &&
        Objects.equals(this.options, jobInfoResponse.options) &&
        Objects.equals(this.returnTargets, jobInfoResponse.returnTargets) &&
        Objects.equals(this.sourceLanguage, jobInfoResponse.sourceLanguage) &&
        Objects.equals(this.targetLanguage, jobInfoResponse.targetLanguage) &&
        Objects.equals(this.creationDate, jobInfoResponse.creationDate) &&
        Objects.equals(this.startDate, jobInfoResponse.startDate) &&
        Objects.equals(this.dueDate, jobInfoResponse.dueDate) &&
        Objects.equals(this.completedDate, jobInfoResponse.completedDate) &&
        Objects.equals(this.returnDate, jobInfoResponse.returnDate) &&
        Objects.equals(this.authorizationDate, jobInfoResponse.authorizationDate) &&
        Objects.equals(this.jobDifficulty, jobInfoResponse.jobDifficulty);
  }

  @Override
  public int hashCode() {
    return Objects.hash(jobId, jobName, mediaLengthSeconds, externalId, priority, fidelity, jobStatus, options, returnTargets, sourceLanguage, targetLanguage, creationDate, startDate, dueDate, completedDate, returnDate, authorizationDate, jobDifficulty);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JobInfoResponse {\n");
    sb.append("    jobId: ").append(toIndentedString(jobId)).append("\n");
    sb.append("    jobName: ").append(toIndentedString(jobName)).append("\n");
    sb.append("    mediaLengthSeconds: ").append(toIndentedString(mediaLengthSeconds)).append("\n");
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    fidelity: ").append(toIndentedString(fidelity)).append("\n");
    sb.append("    jobStatus: ").append(toIndentedString(jobStatus)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("    returnTargets: ").append(toIndentedString(returnTargets)).append("\n");
    sb.append("    sourceLanguage: ").append(toIndentedString(sourceLanguage)).append("\n");
    sb.append("    targetLanguage: ").append(toIndentedString(targetLanguage)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    dueDate: ").append(toIndentedString(dueDate)).append("\n");
    sb.append("    completedDate: ").append(toIndentedString(completedDate)).append("\n");
    sb.append("    returnDate: ").append(toIndentedString(returnDate)).append("\n");
    sb.append("    authorizationDate: ").append(toIndentedString(authorizationDate)).append("\n");
    sb.append("    jobDifficulty: ").append(toIndentedString(jobDifficulty)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("JobId");
    openapiFields.add("JobName");
    openapiFields.add("MediaLengthSeconds");
    openapiFields.add("ExternalId");
    openapiFields.add("Priority");
    openapiFields.add("Fidelity");
    openapiFields.add("JobStatus");
    openapiFields.add("Options");
    openapiFields.add("ReturnTargets");
    openapiFields.add("SourceLanguage");
    openapiFields.add("TargetLanguage");
    openapiFields.add("CreationDate");
    openapiFields.add("StartDate");
    openapiFields.add("DueDate");
    openapiFields.add("CompletedDate");
    openapiFields.add("ReturnDate");
    openapiFields.add("AuthorizationDate");
    openapiFields.add("JobDifficulty");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to JobInfoResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (JobInfoResponse.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in JobInfoResponse is not found in the empty JSON string", JobInfoResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!JobInfoResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `JobInfoResponse` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("JobId") != null && !jsonObj.get("JobId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `JobId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("JobId").toString()));
      }
      if (jsonObj.get("JobName") != null && !jsonObj.get("JobName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `JobName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("JobName").toString()));
      }
      if (jsonObj.get("ExternalId") != null && !jsonObj.get("ExternalId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ExternalId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ExternalId").toString()));
      }
      if (jsonObj.get("Priority") != null && !jsonObj.get("Priority").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Priority` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Priority").toString()));
      }
      if (jsonObj.get("Fidelity") != null && !jsonObj.get("Fidelity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Fidelity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Fidelity").toString()));
      }
      if (jsonObj.get("JobStatus") != null && !jsonObj.get("JobStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `JobStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("JobStatus").toString()));
      }
      // validate the optional field `Options`
      if (jsonObj.getAsJsonObject("Options") != null) {
        JobOptions.validateJsonObject(jsonObj.getAsJsonObject("Options"));
      }
      if (jsonObj.get("SourceLanguage") != null && !jsonObj.get("SourceLanguage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SourceLanguage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SourceLanguage").toString()));
      }
      if (jsonObj.get("TargetLanguage") != null && !jsonObj.get("TargetLanguage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `TargetLanguage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("TargetLanguage").toString()));
      }
      if (jsonObj.get("CreationDate") != null && !jsonObj.get("CreationDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CreationDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CreationDate").toString()));
      }
      if (jsonObj.get("StartDate") != null && !jsonObj.get("StartDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `StartDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("StartDate").toString()));
      }
      if (jsonObj.get("DueDate") != null && !jsonObj.get("DueDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `DueDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("DueDate").toString()));
      }
      if (jsonObj.get("CompletedDate") != null && !jsonObj.get("CompletedDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CompletedDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CompletedDate").toString()));
      }
      if (jsonObj.get("ReturnDate") != null && !jsonObj.get("ReturnDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ReturnDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ReturnDate").toString()));
      }
      if (jsonObj.get("AuthorizationDate") != null && !jsonObj.get("AuthorizationDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `AuthorizationDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("AuthorizationDate").toString()));
      }
      if (jsonObj.get("JobDifficulty") != null && !jsonObj.get("JobDifficulty").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `JobDifficulty` to be a primitive type in the JSON string but got `%s`", jsonObj.get("JobDifficulty").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!JobInfoResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'JobInfoResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<JobInfoResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(JobInfoResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<JobInfoResponse>() {
           @Override
           public void write(JsonWriter out, JobInfoResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public JobInfoResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of JobInfoResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of JobInfoResponse
  * @throws IOException if the JSON string is invalid with respect to JobInfoResponse
  */
  public static JobInfoResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, JobInfoResponse.class);
  }

 /**
  * Convert an instance of JobInfoResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

